input {
  tcp {
    port => "4000"
    codec => "json"
    ssl_cert => "/etc/certs/logstash.crt"
    ssl_key => "/etc/certs/logstash.key"
    ssl_enable => "true"
    ssl_verify => "false"
    tags => ["journal_json"]
  }
}

filter {
  if ("journal_json" in [tags]) {
    mutate { rename => { "_HOSTNAME" => "host" } }
    mutate { rename => { "MESSAGE" => "message" } }
    mutate { rename => { "PRIORITY" => "level" } }
    # TODO: handle syslog_facility translation to name
    translate {
      # https://github.com/joemiller/journal2gelf/blob/master/journal2gelf#L51-L69
      field => "SYSLOG_FACILITY"
      destination => "facility"
      dictionary => [ "0",  "kern", "2",  "user", "3",  "daemon", "4", "auth", "5",  "syslog",
                      "6",  "lpr",  "7",  "news", "8",  "uucp",   "9", "cron", "10", "authpriv",
                      "16", "local0", "17", "local1", "18", "local2",   "19", "local3", "20", "local4",
                      "21", "local5", "22", "local6", "23", "local7" ]
    }
    ruby {
      code => "event.to_hash.keys.each do |k|
                 next if k[0,1] == '_'
                 next unless k.upcase == k
                 event['_' + k] = event[k]
                 event.remove(k)
               end"
    }

    # logstash uses the Joda Time library which is limited to millisecond precision. We convert journald's microsecond precision to ms.
    ruby { code => "event['__REALTIME_TIMESTAMP'] = event['__REALTIME_TIMESTAMP'].to_i / 1000" }
    # use the timestamp from the journal, it is the correct stamp
    date { match => ["__REALTIME_TIMESTAMP", "UNIX_MS"] }
    #mutate { rename => { "_MESSAGE" => "message" } }
    #mutate { rename => { "MESSAGE" => "message" } }
    mutate { remove => ["__CURSOR", "__REALTIME_TIMESTAMP", "_BOOT_ID"] }
  }
}

output {
  stdout { codec => "rubydebug" }
}
